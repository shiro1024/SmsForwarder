//file:noinspection GrDeprecatedAPIUsage
//file:noinspection DependencyNotationArgument
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'img-optimizer'
    id 'com.yanzhenjie.andserver'
}

def keyProps = new Properties()
def keyPropsFile = rootProject.file('keystore/keystore.properties')
if (keyPropsFile.exists()) {
    keyProps.load(new FileInputStream(keyPropsFile))
}

//打包时，记得设置true启用
if (isNeedPackage.toBoolean() && isUseBooster.toBoolean()) {
    apply plugin: 'com.didiglobal.booster'
}

android {
    //noinspection GradleDependency
    buildToolsVersion build_versions.build_tools
    compileSdkVersion build_versions.target_sdk

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.idormy.sms.forwarder"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        //vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //ABI配置——按CPU架构分别打包
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }
    def abiCodes = ['universal': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'x86': 4, 'x86_64': 5]
    packagingOptions {
        resources {
            pickFirst 'META-INF/LICENSE.md'
            pickFirst 'META-INF/NOTICE.md'
            excludes += ['META-INF/DEPENDENCIES.txt', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/NOTICE', 'META-INF/LICENSE', 'META-INF/DEPENDENCIES', 'META-INF/notice.txt', 'META-INF/license.txt', 'META-INF/dependencies.txt', 'META-INF/LGPL2.1']
        }
    }

    android.applicationVariants.configureEach { variant ->
        // Assigns a different version code for each output APK.
        variant.outputs.each { output ->
            def date = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08"))
            //noinspection GrDeprecatedAPIUsage
            def abiName = output.getFilter(com.android.build.OutputFile.ABI)
            if (abiName == null) abiName = "universal"
            output.versionCodeOverride = abiCodes.get(abiName, 0) * 100000 + variant.versionCode
            output.outputFileName = "SmsF_${versionName}_${output.versionCode}_${abiName}_${date}_${variant.name}.apk"
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    lint {
        abortOnError false
    }
    namespace 'com.idormy.sms.forwarder'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kmnkt基于Kotlin Multiplatform的跨平台socket通信统一接口，支持UDP/TCP/MQTT协议
    //https://github.com/xuankaicat/kmnkt
    implementation("org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5")
    //implementation files('libs/socket-2.0.0-alpha06-2.aar')

    testImplementation deps.junit
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation deps.espresso.core

    //noinspection GradleDependency
    implementation 'androidx.core:core-ktx:1.9.0'
    //noinspection GradleDependency
    implementation 'androidx.activity:activity-ktx:1.6.1'
    //noinspection GradleDependency
    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.preference:preference-ktx:1.2.1'

    //分包
    implementation deps.androidx.multidex

    //vLayout：https://github.com/alibaba/vlayout
    implementation 'com.alibaba.android:vlayout:1.3.0'
    //下拉刷新
    implementation 'com.github.xuexiangjys.SmartRefreshLayout:refresh-header:1.1.5'
    implementation 'com.github.xuexiangjys.SmartRefreshLayout:refresh-layout:1.1.5'
    //WebView
    implementation 'com.github.xuexiangjys.AgentWeb:agentweb-core:1.0.0'
    implementation 'com.github.xuexiangjys.AgentWeb:agentweb-download:1.0.0'//选填
    //屏幕适配AutoSize：https://github.com/JessYanCoding/AndroidAutoSize
    implementation 'me.jessyan:autosize:1.2.1'

    //预加载占位控件
    implementation 'me.samlss:broccoli:1.0.0'

    //RichText：https://github.com/zzhoujay/RichText
    implementation 'com.zzhoujay.richtext:richtext:3.0.8'

    //美团多渠道打包
    //implementation 'com.meituan.android.walle:library:1.1.6'

    def work_version = '2.8.1'
    //noinspection GradleDependency
    api("androidx.work:work-multiprocess:$work_version")
    //noinspection GradleDependency
    api("androidx.work:work-runtime-ktx:$work_version")

    //Android Room
    def room_version = '2.5.2'
    //noinspection GradleDependency
    implementation "androidx.room:room-ktx:$room_version"
    //noinspection GradleDependency
    implementation "androidx.room:room-runtime:$room_version"
    //noinspection GradleDependency
    implementation "androidx.room:room-paging:$room_version"
    //noinspection GradleDependency
    implementation "androidx.room:room-rxjava2:$room_version"
    //noinspection KaptUsageInsteadOfKsp
    kapt "androidx.room:room-compiler:$room_version"

    //CodeView：https://github.com/AmrDeveloper/CodeView
    implementation 'io.github.amrdeveloper:codeview:1.3.9'

    //LiveEventBus：https://github.com/JeremyLiao/LiveEventBus
    implementation 'io.github.jeremyliao:live-event-bus-x:1.8.0'

    //MarkdownView：https://github.com/tiagohm/MarkdownView
    implementation 'com.github.tiagohm.MarkdownView:library:0.19.0'
    //implementation 'com.github.tiagohm.MarkdownView:emoji:0.19.0'

    def retrofit2_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_version"

    def paging_version = "3.1.1"
    //noinspection GradleDependency
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // alternatively - without Android dependencies for tests
    //noinspection GradleDependency
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    //权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.github.getActivity:XXPermissions:18.6'
    //语种切换框架：https://github.com/getActivity/MultiLanguages
    implementation 'com.github.getActivity:MultiLanguages:b47f7be' //9.3

    def mail_version = '1.6.7'
    implementation "com.sun.mail:android-mail:$mail_version"
    implementation "com.sun.mail:android-activation:$mail_version"

    //Android Keep Alive(安卓保活)，Cactus 集成双进程前台服务，JobScheduler，onePix(一像素)，WorkManager，无声音乐
    //https://github.com/gyf-dev/Cactus
    implementation 'com.gyf.cactus:cactus:1.1.3-beta13'

    //HTTP服务器：https://github.com/yanzhenjie/AndServer
    implementation 'cn.ppps.andserver:api:2.1.12'
    kapt 'cn.ppps.andserver:processor:2.1.12'

    //Location 是一个通过 Android 自带的 LocationManager 来实现的定位功能：https://github.com/jenly1314/Location
    implementation 'com.github.pppscn:location:1.0.0'

    //Partial implementation of Quartz Cron Java for Android: https://github.com/gatewayapps/crondroid
    implementation 'gatewayapps.crondroid:crondroid:1.0.0'
    //Java Parser For Cron Expressions: https://github.com/grahamar/cron-parser
    implementation 'net.redhogs.cronparser:cron-parser-core:3.5'

    //侧边栏菜单：https://github.com/yarolegovich/SlidingRootNav
    implementation 'com.yarolegovich:sliding-root-nav:1.1.1'
}
//自动添加X-Library依赖
apply from: 'x-library.gradle'
//walle多渠道打包
//apply from: 'multiple-channel.gradle'
